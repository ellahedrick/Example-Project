Index.PACKAGES = {"menu_commands" : [{"name" : "menu_commands.Agent_OffensiveMoney", "shortDescription" : "An Agent that plays offensively to steal money from other players", "members_class" : [{"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Agent_OffensiveMoney.doMove", "link" : "menu_commands\/Agent_OffensiveMoney.html#doMove:Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): String", "member" : "menu_commands.Agent_OffensiveMoney.show", "link" : "menu_commands\/Agent_OffensiveMoney.html#show:String", "kind" : "def"}, {"member" : "menu_commands.Agent_OffensiveMoney#<init>", "error" : "unsupported entity"}, {"label" : "player", "tail" : ": Player", "member" : "menu_commands.Agent_OffensiveMoney.player", "link" : "menu_commands\/Agent_OffensiveMoney.html#player:menu_commands.Player", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Agent_OffensiveMoney.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Agent_OffensiveMoney.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Agent_OffensiveMoney.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Agent_OffensiveMoney.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Agent_OffensiveMoney.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Agent_OffensiveMoney.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Agent_OffensiveMoney.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_OffensiveMoney.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_OffensiveMoney.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_OffensiveMoney.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Agent_OffensiveMoney.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Agent_OffensiveMoney.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Agent_OffensiveMoney.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Agent_OffensiveMoney.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Agent_OffensiveMoney.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Agent_OffensiveMoney.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Agent_OffensiveMoney.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Agent_OffensiveMoney.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Agent_OffensiveMoney.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Agent_OffensiveMoney.html", "kind" : "class"}, {"name" : "menu_commands.Agent_OffensiveProperty", "shortDescription" : "An Agent that plays offensively to steal properties from other players", "members_class" : [{"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Agent_OffensiveProperty.doMove", "link" : "menu_commands\/Agent_OffensiveProperty.html#doMove:Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): String", "member" : "menu_commands.Agent_OffensiveProperty.show", "link" : "menu_commands\/Agent_OffensiveProperty.html#show:String", "kind" : "def"}, {"member" : "menu_commands.Agent_OffensiveProperty#<init>", "error" : "unsupported entity"}, {"label" : "player", "tail" : ": Player", "member" : "menu_commands.Agent_OffensiveProperty.player", "link" : "menu_commands\/Agent_OffensiveProperty.html#player:menu_commands.Player", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Agent_OffensiveProperty.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Agent_OffensiveProperty.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Agent_OffensiveProperty.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Agent_OffensiveProperty.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Agent_OffensiveProperty.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Agent_OffensiveProperty.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Agent_OffensiveProperty.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_OffensiveProperty.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_OffensiveProperty.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_OffensiveProperty.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Agent_OffensiveProperty.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Agent_OffensiveProperty.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Agent_OffensiveProperty.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Agent_OffensiveProperty.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Agent_OffensiveProperty.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Agent_OffensiveProperty.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Agent_OffensiveProperty.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Agent_OffensiveProperty.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Agent_OffensiveProperty.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Agent_OffensiveProperty.html", "kind" : "class"}, {"name" : "menu_commands.Agent_PropertyFirst", "shortDescription" : "An Agent that plays in the most basic manner by playing properties as soon as possible.", "members_class" : [{"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Agent_PropertyFirst.doMove", "link" : "menu_commands\/Agent_PropertyFirst.html#doMove:Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): String", "member" : "menu_commands.Agent_PropertyFirst.show", "link" : "menu_commands\/Agent_PropertyFirst.html#show:String", "kind" : "def"}, {"member" : "menu_commands.Agent_PropertyFirst#<init>", "error" : "unsupported entity"}, {"label" : "player", "tail" : ": Player", "member" : "menu_commands.Agent_PropertyFirst.player", "link" : "menu_commands\/Agent_PropertyFirst.html#player:menu_commands.Player", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Agent_PropertyFirst.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Agent_PropertyFirst.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Agent_PropertyFirst.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Agent_PropertyFirst.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Agent_PropertyFirst.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Agent_PropertyFirst.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Agent_PropertyFirst.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_PropertyFirst.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_PropertyFirst.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_PropertyFirst.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Agent_PropertyFirst.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Agent_PropertyFirst.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Agent_PropertyFirst.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Agent_PropertyFirst.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Agent_PropertyFirst.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Agent_PropertyFirst.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Agent_PropertyFirst.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Agent_PropertyFirst.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Agent_PropertyFirst.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Agent_PropertyFirst.html", "kind" : "class"}, {"name" : "menu_commands.Agent_PropertyLast", "shortDescription" : "An Agent that plays defensively to protect properties from other players", "members_class" : [{"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Agent_PropertyLast.doMove", "link" : "menu_commands\/Agent_PropertyLast.html#doMove:Unit", "kind" : "def"}, {"label" : "show", "tail" : "(): String", "member" : "menu_commands.Agent_PropertyLast.show", "link" : "menu_commands\/Agent_PropertyLast.html#show:String", "kind" : "def"}, {"member" : "menu_commands.Agent_PropertyLast#<init>", "error" : "unsupported entity"}, {"label" : "player", "tail" : ": Player", "member" : "menu_commands.Agent_PropertyLast.player", "link" : "menu_commands\/Agent_PropertyLast.html#player:menu_commands.Player", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Agent_PropertyLast.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Agent_PropertyLast.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Agent_PropertyLast.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Agent_PropertyLast.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Agent_PropertyLast.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Agent_PropertyLast.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Agent_PropertyLast.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_PropertyLast.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_PropertyLast.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Agent_PropertyLast.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Agent_PropertyLast.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Agent_PropertyLast.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Agent_PropertyLast.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Agent_PropertyLast.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Agent_PropertyLast.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Agent_PropertyLast.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Agent_PropertyLast.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Agent_PropertyLast.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Agent_PropertyLast.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Agent_PropertyLast.html", "kind" : "class"}, {"name" : "menu_commands.Board", "shortDescription" : "Creates the board object", "object" : "menu_commands\/Board$.html", "members_object" : [{"label" : "show", "tail" : "(): String", "member" : "menu_commands.Board.show", "link" : "menu_commands\/Board$.html#show:String", "kind" : "def"}, {"label" : "cells", "tail" : ": Array[Array[Cell]]", "member" : "menu_commands.Board.cells", "link" : "menu_commands\/Board$.html#cells:Array[Array[menu_commands.Cell]]", "kind" : "val"}, {"label" : "cols", "tail" : ": Int", "member" : "menu_commands.Board.cols", "link" : "menu_commands\/Board$.html#cols:Int", "kind" : "val"}, {"label" : "rows", "tail" : ": Int", "member" : "menu_commands.Board.rows", "link" : "menu_commands\/Board$.html#rows:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Board$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Board$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Board$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Board$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Board$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Board$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Board$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Board$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Board$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Board$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Board$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Board$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Board$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Board$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Board$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Board$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Board$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Board$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Board$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "menu_commands.Card", "shortDescription" : "A card in the game", "members_class" : [{"label" : "show", "tail" : "(): String", "member" : "menu_commands.Card.show", "link" : "menu_commands\/Card.html#show:String", "kind" : "def"}, {"member" : "menu_commands.Card#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Int", "member" : "menu_commands.Card.value", "link" : "menu_commands\/Card.html#value:Int", "kind" : "val"}, {"label" : "variant", "tail" : ": Char", "member" : "menu_commands.Card.variant", "link" : "menu_commands\/Card.html#variant:Char", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "menu_commands.Card.name", "link" : "menu_commands\/Card.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Card.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Card.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Card.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Card.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Card.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Card.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Card.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Card.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Card.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Card.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Card.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Card.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Card.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Card.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Card.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Card.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Card.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Card.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Card.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Card.html", "kind" : "class"}, {"name" : "menu_commands.Cell", "shortDescription" : "A cell of the game board", "members_class" : [{"label" : "show", "tail" : "(): String", "member" : "menu_commands.Cell.show", "link" : "menu_commands\/Cell.html#show:String", "kind" : "def"}, {"label" : "card", "tail" : ": Option[Card]", "member" : "menu_commands.Cell.card", "link" : "menu_commands\/Cell.html#card:Option[menu_commands.Card]", "kind" : "var"}, {"member" : "menu_commands.Cell#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Cell.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Cell.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Cell.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Cell.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Cell.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Cell.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Cell.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Cell.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Cell.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Cell.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Cell.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Cell.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Cell.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Cell.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Cell.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Cell.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Cell.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Cell.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Cell.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Cell.html", "kind" : "class"}, {"name" : "menu_commands.Controller", "shortDescription" : "The controller in the MVC architecture", "members_class" : [{"label" : "exit", "tail" : "(): Nothing", "member" : "menu_commands.Controller.exit", "link" : "menu_commands\/Controller.html#exit:Nothing", "kind" : "def"}, {"label" : "setStrategy", "tail" : "(player: Player, strategy: Strategy): Unit", "member" : "menu_commands.Controller.setStrategy", "link" : "menu_commands\/Controller.html#setStrategy(player:menu_commands.Player,strategy:menu_commands.Strategy):Unit", "kind" : "def"}, {"label" : "showStrategies", "tail" : "(): String", "member" : "menu_commands.Controller.showStrategies", "link" : "menu_commands\/Controller.html#showStrategies:String", "kind" : "def"}, {"label" : "doGame", "tail" : "(): String", "member" : "menu_commands.Controller.doGame", "link" : "menu_commands\/Controller.html#doGame:String", "kind" : "def"}, {"label" : "doTurn", "tail" : "(): Unit", "member" : "menu_commands.Controller.doTurn", "link" : "menu_commands\/Controller.html#doTurn:Unit", "kind" : "def"}, {"label" : "initializeGame", "tail" : "(): Unit", "member" : "menu_commands.Controller.initializeGame", "link" : "menu_commands\/Controller.html#initializeGame:Unit", "kind" : "def"}, {"label" : "advancePlayerOrder", "tail" : "(): Unit", "member" : "menu_commands.Controller.advancePlayerOrder", "link" : "menu_commands\/Controller.html#advancePlayerOrder:Unit", "kind" : "def"}, {"label" : "showPlayerOrder", "tail" : "(): String", "member" : "menu_commands.Controller.showPlayerOrder", "link" : "menu_commands\/Controller.html#showPlayerOrder:String", "kind" : "def"}, {"label" : "shuffle", "tail" : "(): Unit", "member" : "menu_commands.Controller.shuffle", "link" : "menu_commands\/Controller.html#shuffle:Unit", "kind" : "def"}, {"label" : "showGame", "tail" : "(): Unit", "member" : "menu_commands.Controller.showGame", "link" : "menu_commands\/Controller.html#showGame:Unit", "kind" : "def"}, {"member" : "menu_commands.Controller#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Controller.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Controller.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Controller.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Controller.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Controller.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Controller.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Controller.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Controller.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Controller.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Controller.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Controller.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Controller.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Controller.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Controller.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Controller.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Controller.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Controller.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Controller.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Controller.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Controller.html", "kind" : "class"}, {"name" : "menu_commands.Deck", "shortDescription" : "creates the deck object (extended from a mutable Queue of type Card)", "object" : "menu_commands\/Deck$.html", "members_object" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "menu_commands\/Deck$.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "shuffle", "tail" : "(): Unit", "member" : "menu_commands.Deck.shuffle", "link" : "menu_commands\/Deck$.html#shuffle:Unit", "kind" : "def"}, {"label" : "deal", "tail" : "(): Card", "member" : "menu_commands.Deck.deal", "link" : "menu_commands\/Deck$.html#deal:menu_commands.Card", "kind" : "def"}, {"label" : "createDeck", "tail" : "(): Unit", "member" : "menu_commands.Deck.createDeck", "link" : "menu_commands\/Deck$.html#createDeck:Unit", "kind" : "def"}, {"label" : "fixedDeck", "tail" : ": Queue[Card]", "member" : "menu_commands.Deck.fixedDeck", "link" : "menu_commands\/Deck$.html#fixedDeck:scala.collection.mutable.Queue[menu_commands.Card]", "kind" : "var"}, {"label" : "discard", "tail" : ": Queue[Card]", "member" : "menu_commands.Deck.discard", "link" : "menu_commands\/Deck$.html#discard:scala.collection.mutable.Queue[menu_commands.Card]", "kind" : "var"}, {"label" : "seed", "tail" : ": Int", "member" : "menu_commands.Deck.seed", "link" : "menu_commands\/Deck$.html#seed:Int", "kind" : "val"}, {"label" : "clone", "tail" : "(): Queue[Card]", "member" : "scala.collection.mutable.Queue.clone", "link" : "menu_commands\/Deck$.html#clone():scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Queue[Card]", "member" : "scala.collection.mutable.Queue.tail", "link" : "menu_commands\/Deck$.html#tail:scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "front", "tail" : "(): Card", "member" : "scala.collection.mutable.Queue.front", "link" : "menu_commands\/Deck$.html#front:A", "kind" : "def"}, {"label" : "extractFirst", "tail" : "(start: LinkedList[Card], p: (Card) ⇒ Boolean): Option[LinkedList[Card]]", "member" : "scala.collection.mutable.Queue.extractFirst", "link" : "menu_commands\/Deck$.html#extractFirst(start:scala.collection.mutable.LinkedList[A],p:A=>Boolean):Option[scala.collection.mutable.LinkedList[A]]", "kind" : "def"}, {"label" : "dequeueAll", "tail" : "(p: (Card) ⇒ Boolean): Seq[Card]", "member" : "scala.collection.mutable.Queue.dequeueAll", "link" : "menu_commands\/Deck$.html#dequeueAll(p:A=>Boolean):scala.collection.mutable.Seq[A]", "kind" : "def"}, {"label" : "dequeueFirst", "tail" : "(p: (Card) ⇒ Boolean): Option[Card]", "member" : "scala.collection.mutable.Queue.dequeueFirst", "link" : "menu_commands\/Deck$.html#dequeueFirst(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "dequeue", "tail" : "(): Card", "member" : "scala.collection.mutable.Queue.dequeue", "link" : "menu_commands\/Deck$.html#dequeue():A", "kind" : "def"}, {"label" : "enqueue", "tail" : "(elems: Card*): Unit", "member" : "scala.collection.mutable.Queue.enqueue", "link" : "menu_commands\/Deck$.html#enqueue(elems:A*):Unit", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Card, Queue[Card]]", "member" : "scala.collection.mutable.Queue.newBuilder", "link" : "menu_commands\/Deck$.html#newBuilder:scala.collection.mutable.Builder[A,scala.collection.mutable.Queue[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Queue]", "member" : "scala.collection.mutable.Queue.companion", "link" : "menu_commands\/Deck$.html#companion:scala.collection.generic.GenericCompanion[scala.collection.mutable.Queue]", "kind" : "def"}, {"label" : "result", "tail" : "(): MutableList[Card]", "member" : "scala.collection.mutable.MutableList.result", "link" : "menu_commands\/Deck$.html#result():scala.collection.mutable.MutableList[A]", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.MutableList.clear", "link" : "menu_commands\/Deck$.html#clear():Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(elem: Card): Deck.this.type", "member" : "scala.collection.mutable.MutableList.+=", "link" : "menu_commands\/Deck$.html#+=(elem:A):MutableList.this.type", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Card]", "member" : "scala.collection.mutable.MutableList.toList", "link" : "menu_commands\/Deck$.html#toList:List[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Card", "member" : "scala.collection.mutable.MutableList.last", "link" : "menu_commands\/Deck$.html#last:A", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.mutable.MutableList.iterator", "link" : "menu_commands\/Deck$.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "appendElem", "tail" : "(elem: Card): Unit", "member" : "scala.collection.mutable.MutableList.appendElem", "link" : "menu_commands\/Deck$.html#appendElem(elem:A):Unit", "kind" : "def"}, {"label" : "prependElem", "tail" : "(elem: Card): Unit", "member" : "scala.collection.mutable.MutableList.prependElem", "link" : "menu_commands\/Deck$.html#prependElem(elem:A):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(n: Int): Option[Card]", "member" : "scala.collection.mutable.MutableList.get", "link" : "menu_commands\/Deck$.html#get(n:Int):Option[A]", "kind" : "def"}, {"label" : "update", "tail" : "(n: Int, x: Card): Unit", "member" : "scala.collection.mutable.MutableList.update", "link" : "menu_commands\/Deck$.html#update(n:Int,x:A):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): Card", "member" : "scala.collection.mutable.MutableList.apply", "link" : "menu_commands\/Deck$.html#apply(n:Int):A", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.mutable.MutableList.length", "link" : "menu_commands\/Deck$.html#length:Int", "kind" : "def"}, {"label" : "+=:", "tail" : "(elem: Card): Deck.this.type", "member" : "scala.collection.mutable.MutableList.+=:", "link" : "menu_commands\/Deck$.html#+=:(elem:A):MutableList.this.type", "kind" : "def"}, {"label" : "tailImpl", "tail" : "(tl: MutableList[Card]): Unit", "member" : "scala.collection.mutable.MutableList.tailImpl", "link" : "menu_commands\/Deck$.html#tailImpl(tl:scala.collection.mutable.MutableList[A]):Unit", "kind" : "final def"}, {"label" : "head", "tail" : "(): Card", "member" : "scala.collection.mutable.MutableList.head", "link" : "menu_commands\/Deck$.html#head:A", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.mutable.MutableList.isEmpty", "link" : "menu_commands\/Deck$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "toQueue", "tail" : "(): Queue[Card]", "member" : "scala.collection.mutable.MutableList.toQueue", "link" : "menu_commands\/Deck$.html#toQueue:scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "len", "tail" : ": Int", "member" : "scala.collection.mutable.MutableList.len", "link" : "menu_commands\/Deck$.html#len:Int", "kind" : "var"}, {"label" : "last0", "tail" : ": LinkedList[Card]", "member" : "scala.collection.mutable.MutableList.last0", "link" : "menu_commands\/Deck$.html#last0:scala.collection.mutable.LinkedList[A]", "kind" : "var"}, {"label" : "first0", "tail" : ": LinkedList[Card]", "member" : "scala.collection.mutable.MutableList.first0", "link" : "menu_commands\/Deck$.html#first0:scala.collection.mutable.LinkedList[A]", "kind" : "var"}, {"label" : "mapResult", "tail" : "(f: (MutableList[Card]) ⇒ NewTo): Builder[Card, NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "menu_commands\/Deck$.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "menu_commands\/Deck$.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "menu_commands\/Deck$.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "menu_commands\/Deck$.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "menu_commands\/Deck$.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[Card]): Deck.this.type", "member" : "scala.collection.generic.Growable.++=", "link" : "menu_commands\/Deck$.html#++=(xs:scala.collection.TraversableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: Card, elem2: Card, elems: Card*): Deck.this.type", "member" : "scala.collection.generic.Growable.+=", "link" : "menu_commands\/Deck$.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.LinearSeqOptimized.lastIndexWhere", "link" : "menu_commands\/Deck$.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.LinearSeqOptimized.indexWhere", "link" : "menu_commands\/Deck$.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Card) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.LinearSeqOptimized.segmentLength", "link" : "menu_commands\/Deck$.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(x: Int): Boolean", "member" : "scala.collection.LinearSeqOptimized.isDefinedAt", "link" : "menu_commands\/Deck$.html#isDefinedAt(x:Int):Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.LinearSeqOptimized.lengthCompare", "link" : "menu_commands\/Deck$.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.LinearSeqOptimized.sameElements", "link" : "menu_commands\/Deck$.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Card) ⇒ Boolean): (Queue[Card], Queue[Card])", "member" : "scala.collection.LinearSeqOptimized.span", "link" : "menu_commands\/Deck$.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Card) ⇒ Boolean): Queue[Card]", "member" : "scala.collection.LinearSeqOptimized.takeWhile", "link" : "menu_commands\/Deck$.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Queue[Card]", "member" : "scala.collection.LinearSeqOptimized.slice", "link" : "menu_commands\/Deck$.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Queue[Card]", "member" : "scala.collection.LinearSeqOptimized.dropRight", "link" : "menu_commands\/Deck$.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Queue[Card]", "member" : "scala.collection.LinearSeqOptimized.drop", "link" : "menu_commands\/Deck$.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Queue[Card]", "member" : "scala.collection.LinearSeqOptimized.take", "link" : "menu_commands\/Deck$.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Card, B) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.reduceRight", "link" : "menu_commands\/Deck$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Card) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.reduceLeft", "link" : "menu_commands\/Deck$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Card, B) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.foldRight", "link" : "menu_commands\/Deck$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Card) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.foldLeft", "link" : "menu_commands\/Deck$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Card) ⇒ Boolean): Option[Card]", "member" : "scala.collection.LinearSeqOptimized.find", "link" : "menu_commands\/Deck$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.LinearSeqOptimized.contains", "link" : "menu_commands\/Deck$.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Card) ⇒ Boolean): Boolean", "member" : "scala.collection.LinearSeqOptimized.exists", "link" : "menu_commands\/Deck$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Card) ⇒ Boolean): Boolean", "member" : "scala.collection.LinearSeqOptimized.forall", "link" : "menu_commands\/Deck$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Card) ⇒ U): Unit", "member" : "scala.collection.LinearSeqOptimized.foreach", "link" : "menu_commands\/Deck$.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "seq", "tail" : "(): LinearSeq[Card]", "member" : "scala.collection.mutable.LinearSeq.seq", "link" : "menu_commands\/Deck$.html#seq:scala.collection.mutable.LinearSeq[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Card, B) ⇒ Boolean): Boolean", "member" : "scala.collection.LinearSeqLike.corresponds", "link" : "menu_commands\/Deck$.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.LinearSeqLike.hashCode", "link" : "menu_commands\/Deck$.html#hashCode():Int", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Queue[Card]): LinearSeq[Card]", "member" : "scala.collection.LinearSeqLike.toCollection", "link" : "menu_commands\/Deck$.html#toCollection(repr:Repr):scala.collection.LinearSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): LinearSeq[Card]", "member" : "scala.collection.LinearSeqLike.thisCollection", "link" : "menu_commands\/Deck$.html#thisCollection:scala.collection.LinearSeq[A]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Card) ⇒ Card): Deck.this.type", "member" : "scala.collection.mutable.SeqLike.transform", "link" : "menu_commands\/Deck$.html#transform(f:A=>A):SeqLike.this.type", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Card, ParSeq[Card]]", "member" : "scala.collection.mutable.SeqLike.parCombiner", "link" : "menu_commands\/Deck$.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.mutable.ParSeq[A]]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "menu_commands\/Deck$.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Card, Queue[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "menu_commands\/Deck$.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Card, Queue[Card]]", "member" : "scala.collection.SeqLike.view", "link" : "menu_commands\/Deck$.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "menu_commands\/Deck$.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Card]", "member" : "scala.collection.SeqLike.toSeq", "link" : "menu_commands\/Deck$.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Queue[Card]", "member" : "scala.collection.SeqLike.sorted", "link" : "menu_commands\/Deck$.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Card) ⇒ B)(ord: Ordering[B]): Queue[Card]", "member" : "scala.collection.SeqLike.sortBy", "link" : "menu_commands\/Deck$.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Card, Card) ⇒ Boolean): Queue[Card]", "member" : "scala.collection.SeqLike.sortWith", "link" : "menu_commands\/Deck$.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "menu_commands\/Deck$.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "menu_commands\/Deck$.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "menu_commands\/Deck$.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "menu_commands\/Deck$.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "menu_commands\/Deck$.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Queue[Card]", "member" : "scala.collection.SeqLike.distinct", "link" : "menu_commands\/Deck$.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Queue[Card]", "member" : "scala.collection.SeqLike.intersect", "link" : "menu_commands\/Deck$.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Queue[Card]", "member" : "scala.collection.SeqLike.diff", "link" : "menu_commands\/Deck$.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "menu_commands\/Deck$.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "menu_commands\/Deck$.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "menu_commands\/Deck$.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "menu_commands\/Deck$.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "menu_commands\/Deck$.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "menu_commands\/Deck$.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "menu_commands\/Deck$.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "menu_commands\/Deck$.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "menu_commands\/Deck$.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Card) ⇒ B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "menu_commands\/Deck$.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Queue[Card]", "member" : "scala.collection.SeqLike.reverse", "link" : "menu_commands\/Deck$.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Queue[Card]]", "member" : "scala.collection.SeqLike.combinations", "link" : "menu_commands\/Deck$.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Queue[Card]]", "member" : "scala.collection.SeqLike.permutations", "link" : "menu_commands\/Deck$.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "menu_commands\/Deck$.html#size:Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "menu_commands\/Deck$.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "menu_commands\/Deck$.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Card) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "menu_commands\/Deck$.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "menu_commands\/Deck$.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "menu_commands\/Deck$.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "menu_commands\/Deck$.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "menu_commands\/Deck$.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Card) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "menu_commands\/Deck$.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Card) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "menu_commands\/Deck$.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Card) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "menu_commands\/Deck$.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "menu_commands\/Deck$.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[Card]", "member" : "scala.PartialFunction.lift", "link" : "menu_commands\/Deck$.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Card) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "menu_commands\/Deck$.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "menu_commands\/Deck$.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ Card", "member" : "scala.Function1.compose", "link" : "menu_commands\/Deck$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "menu_commands\/Deck$.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Card]", "member" : "scala.collection.IterableLike.toStream", "link" : "menu_commands\/Deck$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Queue[Card], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "menu_commands\/Deck$.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Queue[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "menu_commands\/Deck$.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Queue[Card], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "menu_commands\/Deck$.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "menu_commands\/Deck$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Queue[Card]", "member" : "scala.collection.IterableLike.takeRight", "link" : "menu_commands\/Deck$.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Queue[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "menu_commands\/Deck$.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Queue[Card]]", "member" : "scala.collection.IterableLike.sliding", "link" : "menu_commands\/Deck$.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Queue[Card]]", "member" : "scala.collection.IterableLike.grouped", "link" : "menu_commands\/Deck$.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Card]", "member" : "scala.collection.IterableLike.toIterator", "link" : "menu_commands\/Deck$.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Card]", "member" : "scala.collection.IterableLike.toIterable", "link" : "menu_commands\/Deck$.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Card) ⇒ GenTraversableOnce[B]): Queue[Queue[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "menu_commands\/Deck$.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Card) ⇒ GenTraversableOnce[B]): Queue[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "menu_commands\/Deck$.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Card) ⇒ (A1, A2, A3)): (Queue[A1], Queue[A2], Queue[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "menu_commands\/Deck$.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Card) ⇒ (A1, A2)): (Queue[A1], Queue[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "menu_commands\/Deck$.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Queue[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "menu_commands\/Deck$.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Card) ⇒ Boolean): FilterMonadic[Card, Queue[Card]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "menu_commands\/Deck$.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "menu_commands\/Deck$.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Card, Col[Card]]): Col[Card]", "member" : "scala.collection.TraversableLike.to", "link" : "menu_commands\/Deck$.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Card]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "menu_commands\/Deck$.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Queue[Card]]", "member" : "scala.collection.TraversableLike.inits", "link" : "menu_commands\/Deck$.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Queue[Card]]", "member" : "scala.collection.TraversableLike.tails", "link" : "menu_commands\/Deck$.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Queue[Card], Queue[Card])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "menu_commands\/Deck$.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Card) ⇒ Boolean): Queue[Card]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "menu_commands\/Deck$.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Queue[Card]", "member" : "scala.collection.TraversableLike.init", "link" : "menu_commands\/Deck$.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "menu_commands\/Deck$.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Card]", "member" : "scala.collection.TraversableLike.headOption", "link" : "menu_commands\/Deck$.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Card, B) ⇒ B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "menu_commands\/Deck$.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Card) ⇒ B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "menu_commands\/Deck$.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "menu_commands\/Deck$.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Card) ⇒ K): Map[K, Queue[Card]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "menu_commands\/Deck$.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Card) ⇒ Boolean): (Queue[Card], Queue[Card])", "member" : "scala.collection.TraversableLike.partition", "link" : "menu_commands\/Deck$.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Card, B])(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "menu_commands\/Deck$.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Card) ⇒ Boolean): Queue[Card]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "menu_commands\/Deck$.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Card) ⇒ Boolean): Queue[Card]", "member" : "scala.collection.TraversableLike.filter", "link" : "menu_commands\/Deck$.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Card) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "menu_commands\/Deck$.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Card) ⇒ B)(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "menu_commands\/Deck$.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "menu_commands\/Deck$.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "menu_commands\/Deck$.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Queue[Card], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "menu_commands\/Deck$.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "menu_commands\/Deck$.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "menu_commands\/Deck$.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Queue[Card]", "member" : "scala.collection.TraversableLike.repr", "link" : "menu_commands\/Deck$.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "menu_commands\/Deck$.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Card]", "member" : "scala.collection.Parallelizable.par", "link" : "menu_commands\/Deck$.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "menu_commands\/Deck$.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "menu_commands\/Deck$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "menu_commands\/Deck$.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "menu_commands\/Deck$.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "menu_commands\/Deck$.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "menu_commands\/Deck$.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Card, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "menu_commands\/Deck$.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Card]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "menu_commands\/Deck$.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "menu_commands\/Deck$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "menu_commands\/Deck$.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Card]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "menu_commands\/Deck$.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "menu_commands\/Deck$.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "menu_commands\/Deck$.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "menu_commands\/Deck$.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "menu_commands\/Deck$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Card) ⇒ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.minBy", "link" : "menu_commands\/Deck$.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Card) ⇒ B)(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "menu_commands\/Deck$.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.max", "link" : "menu_commands\/Deck$.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Card", "member" : "scala.collection.TraversableOnce.min", "link" : "menu_commands\/Deck$.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "menu_commands\/Deck$.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "menu_commands\/Deck$.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Card) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "menu_commands\/Deck$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "menu_commands\/Deck$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "menu_commands\/Deck$.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "menu_commands\/Deck$.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Card, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "menu_commands\/Deck$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Card) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "menu_commands\/Deck$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Card, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "menu_commands\/Deck$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Card) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "menu_commands\/Deck$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Card, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "menu_commands\/Deck$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Card) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "menu_commands\/Deck$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "menu_commands\/Deck$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Card]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "menu_commands\/Deck$.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "menu_commands\/Deck$.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Deck$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Deck$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Deck$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Deck$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Deck$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Deck$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Deck$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Deck$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Deck$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Deck$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Deck$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Deck$.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Deck$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Deck$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Deck$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "menu_commands.Demo", "shortDescription" : "The object that holds the MVC architecture", "object" : "menu_commands\/Demo$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "menu_commands.Demo.main", "link" : "menu_commands\/Demo$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Demo$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Demo$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Demo$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Demo$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Demo$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Demo$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Demo$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Demo$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Demo$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Demo$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Demo$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Demo$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Demo$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Demo$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Demo$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Demo$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Demo$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Demo$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Demo$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "menu_commands.Menu", "shortDescription" : "creates the menu object", "object" : "menu_commands\/Menu$.html", "members_object" : [{"label" : "showStrategies", "tail" : "(): String", "member" : "menu_commands.Menu.showStrategies", "link" : "menu_commands\/Menu$.html#showStrategies:String", "kind" : "def"}, {"label" : "curStrategy", "tail" : "(): String", "member" : "menu_commands.Menu.curStrategy", "link" : "menu_commands\/Menu$.html#curStrategy:String", "kind" : "def"}, {"label" : "setStrategy", "tail" : "(player: Player, strategy: Strategy): Unit", "member" : "menu_commands.Menu.setStrategy", "link" : "menu_commands\/Menu$.html#setStrategy(player:menu_commands.Player,strategy:menu_commands.Strategy):Unit", "kind" : "def"}, {"label" : "doGame", "tail" : "(): String", "member" : "menu_commands.Menu.doGame", "link" : "menu_commands\/Menu$.html#doGame:String", "kind" : "def"}, {"label" : "doTurn", "tail" : "(): Unit", "member" : "menu_commands.Menu.doTurn", "link" : "menu_commands\/Menu$.html#doTurn:Unit", "kind" : "def"}, {"label" : "showWinner", "tail" : "(): String", "member" : "menu_commands.Menu.showWinner", "link" : "menu_commands\/Menu$.html#showWinner:String", "kind" : "def"}, {"label" : "hasWinner", "tail" : "(): Boolean", "member" : "menu_commands.Menu.hasWinner", "link" : "menu_commands\/Menu$.html#hasWinner:Boolean", "kind" : "def"}, {"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Menu.doMove", "link" : "menu_commands\/Menu$.html#doMove:Unit", "kind" : "def"}, {"label" : "advancePlayerOrder", "tail" : "(): Unit", "member" : "menu_commands.Menu.advancePlayerOrder", "link" : "menu_commands\/Menu$.html#advancePlayerOrder:Unit", "kind" : "def"}, {"label" : "showPlayerOrder", "tail" : "(): String", "member" : "menu_commands.Menu.showPlayerOrder", "link" : "menu_commands\/Menu$.html#showPlayerOrder:String", "kind" : "def"}, {"label" : "showGameArea", "tail" : "(): String", "member" : "menu_commands.Menu.showGameArea", "link" : "menu_commands\/Menu$.html#showGameArea:String", "kind" : "def"}, {"label" : "initialize", "tail" : "(): Unit", "member" : "menu_commands.Menu.initialize", "link" : "menu_commands\/Menu$.html#initialize:Unit", "kind" : "def"}, {"label" : "useRandom", "tail" : ": Boolean", "member" : "menu_commands.Menu.useRandom", "link" : "menu_commands\/Menu$.html#useRandom:Boolean", "kind" : "var"}, {"label" : "winner", "tail" : ": String", "member" : "menu_commands.Menu.winner", "link" : "menu_commands\/Menu$.html#winner:String", "kind" : "var"}, {"label" : "gameOver", "tail" : ": Boolean", "member" : "menu_commands.Menu.gameOver", "link" : "menu_commands\/Menu$.html#gameOver:Boolean", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Menu$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Menu$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Menu$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Menu$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Menu$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Menu$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Menu$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Menu$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Menu$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Menu$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Menu$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Menu$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Menu$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Menu$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Menu$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Menu$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Menu$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Menu$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Menu$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "menu_commands.Model", "shortDescription" : "A model in the MVC architecture", "members_class" : [{"label" : "setStrategy", "tail" : "(player: Player, strategy: Strategy): Unit", "member" : "menu_commands.Model.setStrategy", "link" : "menu_commands\/Model.html#setStrategy(player:menu_commands.Player,strategy:menu_commands.Strategy):Unit", "kind" : "def"}, {"label" : "showStrategies", "tail" : "(): String", "member" : "menu_commands.Model.showStrategies", "link" : "menu_commands\/Model.html#showStrategies:String", "kind" : "def"}, {"label" : "doGame", "tail" : "(): String", "member" : "menu_commands.Model.doGame", "link" : "menu_commands\/Model.html#doGame:String", "kind" : "def"}, {"label" : "doTurn", "tail" : "(): Unit", "member" : "menu_commands.Model.doTurn", "link" : "menu_commands\/Model.html#doTurn:Unit", "kind" : "def"}, {"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Model.doMove", "link" : "menu_commands\/Model.html#doMove:Unit", "kind" : "def"}, {"label" : "checkForWinner", "tail" : "(): String", "member" : "menu_commands.Model.checkForWinner", "link" : "menu_commands\/Model.html#checkForWinner:String", "kind" : "def"}, {"label" : "initializeGame", "tail" : "(): Unit", "member" : "menu_commands.Model.initializeGame", "link" : "menu_commands\/Model.html#initializeGame:Unit", "kind" : "def"}, {"label" : "advancePlayerOrder", "tail" : "(): Unit", "member" : "menu_commands.Model.advancePlayerOrder", "link" : "menu_commands\/Model.html#advancePlayerOrder:Unit", "kind" : "def"}, {"label" : "showPlayerOrder", "tail" : "(): String", "member" : "menu_commands.Model.showPlayerOrder", "link" : "menu_commands\/Model.html#showPlayerOrder:String", "kind" : "def"}, {"label" : "shuffle", "tail" : "(): Unit", "member" : "menu_commands.Model.shuffle", "link" : "menu_commands\/Model.html#shuffle:Unit", "kind" : "def"}, {"label" : "showGameArea", "tail" : "(): String", "member" : "menu_commands.Model.showGameArea", "link" : "menu_commands\/Model.html#showGameArea:String", "kind" : "def"}, {"member" : "menu_commands.Model#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Model.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Model.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Model.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Model.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Model.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Model.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Model.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Model.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Model.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Model.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Model.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Model.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Model.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Model.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Model.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Model.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Model.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Model.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Model.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Model.html", "kind" : "class"}, {"name" : "menu_commands.Player", "shortDescription" : "A player in the game", "members_class" : [{"label" : "showStrategy", "tail" : "(): String", "member" : "menu_commands.Player.showStrategy", "link" : "menu_commands\/Player.html#showStrategy:String", "kind" : "def"}, {"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Player.doMove", "link" : "menu_commands\/Player.html#doMove:Unit", "kind" : "def"}, {"label" : "checkIsWinner", "tail" : "(): Boolean", "member" : "menu_commands.Player.checkIsWinner", "link" : "menu_commands\/Player.html#checkIsWinner:Boolean", "kind" : "def"}, {"label" : "strategy", "tail" : ": Strategy", "member" : "menu_commands.Player.strategy", "link" : "menu_commands\/Player.html#strategy:menu_commands.Strategy", "kind" : "var"}, {"label" : "bank", "tail" : ": List[Card]", "member" : "menu_commands.Player.bank", "link" : "menu_commands\/Player.html#bank:List[menu_commands.Card]", "kind" : "var"}, {"label" : "properties", "tail" : ": List[Card]", "member" : "menu_commands.Player.properties", "link" : "menu_commands\/Player.html#properties:List[menu_commands.Card]", "kind" : "var"}, {"label" : "hand", "tail" : ": List[Card]", "member" : "menu_commands.Player.hand", "link" : "menu_commands\/Player.html#hand:List[menu_commands.Card]", "kind" : "var"}, {"member" : "menu_commands.Player#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": String", "member" : "menu_commands.Player.name", "link" : "menu_commands\/Player.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Player.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Player.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Player.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Player.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Player.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Player.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Player.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Player.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Player.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Player.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Player.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Player.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Player.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Player.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Player.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Player.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Player.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Player.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Player.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Player.html", "kind" : "class"}, {"name" : "menu_commands.PlayerOrder", "shortDescription" : "creates the PlayerOrder object (extended from a mutable Queue of type Player)", "object" : "menu_commands\/PlayerOrder$.html", "members_object" : [{"label" : "WithFilter", "tail" : "", "member" : "scala.collection.TraversableLike.WithFilter", "link" : "menu_commands\/PlayerOrder$.html#WithFilterextendsFilterMonadic[A,Repr]", "kind" : "class"}, {"label" : "current", "tail" : "(): Player", "member" : "menu_commands.PlayerOrder.current", "link" : "menu_commands\/PlayerOrder$.html#current:menu_commands.Player", "kind" : "def"}, {"label" : "show", "tail" : "(): String", "member" : "menu_commands.PlayerOrder.show", "link" : "menu_commands\/PlayerOrder$.html#show:String", "kind" : "def"}, {"label" : "advance", "tail" : "(): Unit", "member" : "menu_commands.PlayerOrder.advance", "link" : "menu_commands\/PlayerOrder$.html#advance:Unit", "kind" : "def"}, {"label" : "addPlayers", "tail" : "(): Unit", "member" : "menu_commands.PlayerOrder.addPlayers", "link" : "menu_commands\/PlayerOrder$.html#addPlayers:Unit", "kind" : "def"}, {"label" : "clone", "tail" : "(): Queue[Player]", "member" : "scala.collection.mutable.Queue.clone", "link" : "menu_commands\/PlayerOrder$.html#clone():scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "tail", "tail" : "(): Queue[Player]", "member" : "scala.collection.mutable.Queue.tail", "link" : "menu_commands\/PlayerOrder$.html#tail:scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "front", "tail" : "(): Player", "member" : "scala.collection.mutable.Queue.front", "link" : "menu_commands\/PlayerOrder$.html#front:A", "kind" : "def"}, {"label" : "extractFirst", "tail" : "(start: LinkedList[Player], p: (Player) ⇒ Boolean): Option[LinkedList[Player]]", "member" : "scala.collection.mutable.Queue.extractFirst", "link" : "menu_commands\/PlayerOrder$.html#extractFirst(start:scala.collection.mutable.LinkedList[A],p:A=>Boolean):Option[scala.collection.mutable.LinkedList[A]]", "kind" : "def"}, {"label" : "dequeueAll", "tail" : "(p: (Player) ⇒ Boolean): Seq[Player]", "member" : "scala.collection.mutable.Queue.dequeueAll", "link" : "menu_commands\/PlayerOrder$.html#dequeueAll(p:A=>Boolean):scala.collection.mutable.Seq[A]", "kind" : "def"}, {"label" : "dequeueFirst", "tail" : "(p: (Player) ⇒ Boolean): Option[Player]", "member" : "scala.collection.mutable.Queue.dequeueFirst", "link" : "menu_commands\/PlayerOrder$.html#dequeueFirst(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "dequeue", "tail" : "(): Player", "member" : "scala.collection.mutable.Queue.dequeue", "link" : "menu_commands\/PlayerOrder$.html#dequeue():A", "kind" : "def"}, {"label" : "enqueue", "tail" : "(elems: Player*): Unit", "member" : "scala.collection.mutable.Queue.enqueue", "link" : "menu_commands\/PlayerOrder$.html#enqueue(elems:A*):Unit", "kind" : "def"}, {"label" : "newBuilder", "tail" : "(): Builder[Player, Queue[Player]]", "member" : "scala.collection.mutable.Queue.newBuilder", "link" : "menu_commands\/PlayerOrder$.html#newBuilder:scala.collection.mutable.Builder[A,scala.collection.mutable.Queue[A]]", "kind" : "def"}, {"label" : "companion", "tail" : "(): GenericCompanion[Queue]", "member" : "scala.collection.mutable.Queue.companion", "link" : "menu_commands\/PlayerOrder$.html#companion:scala.collection.generic.GenericCompanion[scala.collection.mutable.Queue]", "kind" : "def"}, {"label" : "result", "tail" : "(): MutableList[Player]", "member" : "scala.collection.mutable.MutableList.result", "link" : "menu_commands\/PlayerOrder$.html#result():scala.collection.mutable.MutableList[A]", "kind" : "def"}, {"label" : "clear", "tail" : "(): Unit", "member" : "scala.collection.mutable.MutableList.clear", "link" : "menu_commands\/PlayerOrder$.html#clear():Unit", "kind" : "def"}, {"label" : "+=", "tail" : "(elem: Player): PlayerOrder.this.type", "member" : "scala.collection.mutable.MutableList.+=", "link" : "menu_commands\/PlayerOrder$.html#+=(elem:A):MutableList.this.type", "kind" : "def"}, {"label" : "toList", "tail" : "(): List[Player]", "member" : "scala.collection.mutable.MutableList.toList", "link" : "menu_commands\/PlayerOrder$.html#toList:List[A]", "kind" : "def"}, {"label" : "last", "tail" : "(): Player", "member" : "scala.collection.mutable.MutableList.last", "link" : "menu_commands\/PlayerOrder$.html#last:A", "kind" : "def"}, {"label" : "iterator", "tail" : "(): Iterator[Player]", "member" : "scala.collection.mutable.MutableList.iterator", "link" : "menu_commands\/PlayerOrder$.html#iterator:Iterator[A]", "kind" : "def"}, {"label" : "appendElem", "tail" : "(elem: Player): Unit", "member" : "scala.collection.mutable.MutableList.appendElem", "link" : "menu_commands\/PlayerOrder$.html#appendElem(elem:A):Unit", "kind" : "def"}, {"label" : "prependElem", "tail" : "(elem: Player): Unit", "member" : "scala.collection.mutable.MutableList.prependElem", "link" : "menu_commands\/PlayerOrder$.html#prependElem(elem:A):Unit", "kind" : "def"}, {"label" : "get", "tail" : "(n: Int): Option[Player]", "member" : "scala.collection.mutable.MutableList.get", "link" : "menu_commands\/PlayerOrder$.html#get(n:Int):Option[A]", "kind" : "def"}, {"label" : "update", "tail" : "(n: Int, x: Player): Unit", "member" : "scala.collection.mutable.MutableList.update", "link" : "menu_commands\/PlayerOrder$.html#update(n:Int,x:A):Unit", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): Player", "member" : "scala.collection.mutable.MutableList.apply", "link" : "menu_commands\/PlayerOrder$.html#apply(n:Int):A", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "scala.collection.mutable.MutableList.length", "link" : "menu_commands\/PlayerOrder$.html#length:Int", "kind" : "def"}, {"label" : "+=:", "tail" : "(elem: Player): PlayerOrder.this.type", "member" : "scala.collection.mutable.MutableList.+=:", "link" : "menu_commands\/PlayerOrder$.html#+=:(elem:A):MutableList.this.type", "kind" : "def"}, {"label" : "tailImpl", "tail" : "(tl: MutableList[Player]): Unit", "member" : "scala.collection.mutable.MutableList.tailImpl", "link" : "menu_commands\/PlayerOrder$.html#tailImpl(tl:scala.collection.mutable.MutableList[A]):Unit", "kind" : "final def"}, {"label" : "head", "tail" : "(): Player", "member" : "scala.collection.mutable.MutableList.head", "link" : "menu_commands\/PlayerOrder$.html#head:A", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "scala.collection.mutable.MutableList.isEmpty", "link" : "menu_commands\/PlayerOrder$.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "toQueue", "tail" : "(): Queue[Player]", "member" : "scala.collection.mutable.MutableList.toQueue", "link" : "menu_commands\/PlayerOrder$.html#toQueue:scala.collection.mutable.Queue[A]", "kind" : "def"}, {"label" : "len", "tail" : ": Int", "member" : "scala.collection.mutable.MutableList.len", "link" : "menu_commands\/PlayerOrder$.html#len:Int", "kind" : "var"}, {"label" : "last0", "tail" : ": LinkedList[Player]", "member" : "scala.collection.mutable.MutableList.last0", "link" : "menu_commands\/PlayerOrder$.html#last0:scala.collection.mutable.LinkedList[A]", "kind" : "var"}, {"label" : "first0", "tail" : ": LinkedList[Player]", "member" : "scala.collection.mutable.MutableList.first0", "link" : "menu_commands\/PlayerOrder$.html#first0:scala.collection.mutable.LinkedList[A]", "kind" : "var"}, {"label" : "mapResult", "tail" : "(f: (MutableList[Player]) ⇒ NewTo): Builder[Player, NewTo]", "member" : "scala.collection.mutable.Builder.mapResult", "link" : "menu_commands\/PlayerOrder$.html#mapResult[NewTo](f:To=>NewTo):scala.collection.mutable.Builder[Elem,NewTo]", "kind" : "def"}, {"label" : "sizeHintBounded", "tail" : "(size: Int, boundingColl: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHintBounded", "link" : "menu_commands\/PlayerOrder$.html#sizeHintBounded(size:Int,boundingColl:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _], delta: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "menu_commands\/PlayerOrder$.html#sizeHint(coll:scala.collection.TraversableLike[_,_],delta:Int):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(coll: TraversableLike[_, _]): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "menu_commands\/PlayerOrder$.html#sizeHint(coll:scala.collection.TraversableLike[_,_]):Unit", "kind" : "def"}, {"label" : "sizeHint", "tail" : "(size: Int): Unit", "member" : "scala.collection.mutable.Builder.sizeHint", "link" : "menu_commands\/PlayerOrder$.html#sizeHint(size:Int):Unit", "kind" : "def"}, {"label" : "++=", "tail" : "(xs: TraversableOnce[Player]): PlayerOrder.this.type", "member" : "scala.collection.generic.Growable.++=", "link" : "menu_commands\/PlayerOrder$.html#++=(xs:scala.collection.TraversableOnce[A]):Growable.this.type", "kind" : "def"}, {"label" : "+=", "tail" : "(elem1: Player, elem2: Player, elems: Player*): PlayerOrder.this.type", "member" : "scala.collection.generic.Growable.+=", "link" : "menu_commands\/PlayerOrder$.html#+=(elem1:A,elem2:A,elems:A*):Growable.this.type", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Player) ⇒ Boolean, end: Int): Int", "member" : "scala.collection.LinearSeqOptimized.lastIndexWhere", "link" : "menu_commands\/PlayerOrder$.html#lastIndexWhere(p:A=>Boolean,end:Int):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Player) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.LinearSeqOptimized.indexWhere", "link" : "menu_commands\/PlayerOrder$.html#indexWhere(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "segmentLength", "tail" : "(p: (Player) ⇒ Boolean, from: Int): Int", "member" : "scala.collection.LinearSeqOptimized.segmentLength", "link" : "menu_commands\/PlayerOrder$.html#segmentLength(p:A=>Boolean,from:Int):Int", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(x: Int): Boolean", "member" : "scala.collection.LinearSeqOptimized.isDefinedAt", "link" : "menu_commands\/PlayerOrder$.html#isDefinedAt(x:Int):Boolean", "kind" : "def"}, {"label" : "lengthCompare", "tail" : "(len: Int): Int", "member" : "scala.collection.LinearSeqOptimized.lengthCompare", "link" : "menu_commands\/PlayerOrder$.html#lengthCompare(len:Int):Int", "kind" : "def"}, {"label" : "sameElements", "tail" : "(that: GenIterable[B]): Boolean", "member" : "scala.collection.LinearSeqOptimized.sameElements", "link" : "menu_commands\/PlayerOrder$.html#sameElements[B>:A](that:scala.collection.GenIterable[B]):Boolean", "kind" : "def"}, {"label" : "span", "tail" : "(p: (Player) ⇒ Boolean): (Queue[Player], Queue[Player])", "member" : "scala.collection.LinearSeqOptimized.span", "link" : "menu_commands\/PlayerOrder$.html#span(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "takeWhile", "tail" : "(p: (Player) ⇒ Boolean): Queue[Player]", "member" : "scala.collection.LinearSeqOptimized.takeWhile", "link" : "menu_commands\/PlayerOrder$.html#takeWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "slice", "tail" : "(from: Int, until: Int): Queue[Player]", "member" : "scala.collection.LinearSeqOptimized.slice", "link" : "menu_commands\/PlayerOrder$.html#slice(from:Int,until:Int):Repr", "kind" : "def"}, {"label" : "dropRight", "tail" : "(n: Int): Queue[Player]", "member" : "scala.collection.LinearSeqOptimized.dropRight", "link" : "menu_commands\/PlayerOrder$.html#dropRight(n:Int):Repr", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Int): Queue[Player]", "member" : "scala.collection.LinearSeqOptimized.drop", "link" : "menu_commands\/PlayerOrder$.html#drop(n:Int):Repr", "kind" : "def"}, {"label" : "take", "tail" : "(n: Int): Queue[Player]", "member" : "scala.collection.LinearSeqOptimized.take", "link" : "menu_commands\/PlayerOrder$.html#take(n:Int):Repr", "kind" : "def"}, {"label" : "reduceRight", "tail" : "(op: (Player, B) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.reduceRight", "link" : "menu_commands\/PlayerOrder$.html#reduceRight[B>:A](op:(A,B)=>B):B", "kind" : "def"}, {"label" : "reduceLeft", "tail" : "(op: (B, Player) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.reduceLeft", "link" : "menu_commands\/PlayerOrder$.html#reduceLeft[B>:A](op:(B,A)=>B):B", "kind" : "def"}, {"label" : "foldRight", "tail" : "(z: B)(op: (Player, B) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.foldRight", "link" : "menu_commands\/PlayerOrder$.html#foldRight[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "foldLeft", "tail" : "(z: B)(op: (B, Player) ⇒ B): B", "member" : "scala.collection.LinearSeqOptimized.foldLeft", "link" : "menu_commands\/PlayerOrder$.html#foldLeft[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "find", "tail" : "(p: (Player) ⇒ Boolean): Option[Player]", "member" : "scala.collection.LinearSeqOptimized.find", "link" : "menu_commands\/PlayerOrder$.html#find(p:A=>Boolean):Option[A]", "kind" : "def"}, {"label" : "contains", "tail" : "(elem: A1): Boolean", "member" : "scala.collection.LinearSeqOptimized.contains", "link" : "menu_commands\/PlayerOrder$.html#contains[A1>:A](elem:A1):Boolean", "kind" : "def"}, {"label" : "exists", "tail" : "(p: (Player) ⇒ Boolean): Boolean", "member" : "scala.collection.LinearSeqOptimized.exists", "link" : "menu_commands\/PlayerOrder$.html#exists(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "forall", "tail" : "(p: (Player) ⇒ Boolean): Boolean", "member" : "scala.collection.LinearSeqOptimized.forall", "link" : "menu_commands\/PlayerOrder$.html#forall(p:A=>Boolean):Boolean", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Player) ⇒ U): Unit", "member" : "scala.collection.LinearSeqOptimized.foreach", "link" : "menu_commands\/PlayerOrder$.html#foreach[U](f:A=>U):Unit", "kind" : "def"}, {"label" : "seq", "tail" : "(): LinearSeq[Player]", "member" : "scala.collection.mutable.LinearSeq.seq", "link" : "menu_commands\/PlayerOrder$.html#seq:scala.collection.mutable.LinearSeq[A]", "kind" : "def"}, {"label" : "corresponds", "tail" : "(that: GenSeq[B])(p: (Player, B) ⇒ Boolean): Boolean", "member" : "scala.collection.LinearSeqLike.corresponds", "link" : "menu_commands\/PlayerOrder$.html#corresponds[B](that:scala.collection.GenSeq[B])(p:(A,B)=>Boolean):Boolean", "kind" : "final def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.collection.LinearSeqLike.hashCode", "link" : "menu_commands\/PlayerOrder$.html#hashCode():Int", "kind" : "def"}, {"label" : "toCollection", "tail" : "(repr: Queue[Player]): LinearSeq[Player]", "member" : "scala.collection.LinearSeqLike.toCollection", "link" : "menu_commands\/PlayerOrder$.html#toCollection(repr:Repr):scala.collection.LinearSeq[A]", "kind" : "def"}, {"label" : "thisCollection", "tail" : "(): LinearSeq[Player]", "member" : "scala.collection.LinearSeqLike.thisCollection", "link" : "menu_commands\/PlayerOrder$.html#thisCollection:scala.collection.LinearSeq[A]", "kind" : "def"}, {"label" : "transform", "tail" : "(f: (Player) ⇒ Player): PlayerOrder.this.type", "member" : "scala.collection.mutable.SeqLike.transform", "link" : "menu_commands\/PlayerOrder$.html#transform(f:A=>A):SeqLike.this.type", "kind" : "def"}, {"label" : "parCombiner", "tail" : "(): Combiner[Player, ParSeq[Player]]", "member" : "scala.collection.mutable.SeqLike.parCombiner", "link" : "menu_commands\/PlayerOrder$.html#parCombiner:scala.collection.parallel.Combiner[A,scala.collection.parallel.mutable.ParSeq[A]]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.collection.SeqLike.toString", "link" : "menu_commands\/PlayerOrder$.html#toString():String", "kind" : "def"}, {"label" : "view", "tail" : "(from: Int, until: Int): SeqView[Player, Queue[Player]]", "member" : "scala.collection.SeqLike.view", "link" : "menu_commands\/PlayerOrder$.html#view(from:Int,until:Int):scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "view", "tail" : "(): SeqView[Player, Queue[Player]]", "member" : "scala.collection.SeqLike.view", "link" : "menu_commands\/PlayerOrder$.html#view:scala.collection.SeqView[A,Repr]", "kind" : "def"}, {"label" : "indices", "tail" : "(): Range", "member" : "scala.collection.SeqLike.indices", "link" : "menu_commands\/PlayerOrder$.html#indices:scala.collection.immutable.Range", "kind" : "def"}, {"label" : "toSeq", "tail" : "(): Seq[Player]", "member" : "scala.collection.SeqLike.toSeq", "link" : "menu_commands\/PlayerOrder$.html#toSeq:Seq[A]", "kind" : "def"}, {"label" : "sorted", "tail" : "(ord: Ordering[B]): Queue[Player]", "member" : "scala.collection.SeqLike.sorted", "link" : "menu_commands\/PlayerOrder$.html#sorted[B>:A](implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortBy", "tail" : "(f: (Player) ⇒ B)(ord: Ordering[B]): Queue[Player]", "member" : "scala.collection.SeqLike.sortBy", "link" : "menu_commands\/PlayerOrder$.html#sortBy[B](f:A=>B)(implicitord:scala.math.Ordering[B]):Repr", "kind" : "def"}, {"label" : "sortWith", "tail" : "(lt: (Player, Player) ⇒ Boolean): Queue[Player]", "member" : "scala.collection.SeqLike.sortWith", "link" : "menu_commands\/PlayerOrder$.html#sortWith(lt:(A,A)=>Boolean):Repr", "kind" : "def"}, {"label" : "padTo", "tail" : "(len: Int, elem: B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.SeqLike.padTo", "link" : "menu_commands\/PlayerOrder$.html#padTo[B>:A,That](len:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : ":+", "tail" : "(elem: B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.SeqLike.:+", "link" : "menu_commands\/PlayerOrder$.html#:+[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "+:", "tail" : "(elem: B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.SeqLike.+:", "link" : "menu_commands\/PlayerOrder$.html#+:[B>:A,That](elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "updated", "tail" : "(index: Int, elem: B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.SeqLike.updated", "link" : "menu_commands\/PlayerOrder$.html#updated[B>:A,That](index:Int,elem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "patch", "tail" : "(from: Int, patch: GenSeq[B], replaced: Int)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.SeqLike.patch", "link" : "menu_commands\/PlayerOrder$.html#patch[B>:A,That](from:Int,patch:scala.collection.GenSeq[B],replaced:Int)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "distinct", "tail" : "(): Queue[Player]", "member" : "scala.collection.SeqLike.distinct", "link" : "menu_commands\/PlayerOrder$.html#distinct:Repr", "kind" : "def"}, {"label" : "intersect", "tail" : "(that: GenSeq[B]): Queue[Player]", "member" : "scala.collection.SeqLike.intersect", "link" : "menu_commands\/PlayerOrder$.html#intersect[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "diff", "tail" : "(that: GenSeq[B]): Queue[Player]", "member" : "scala.collection.SeqLike.diff", "link" : "menu_commands\/PlayerOrder$.html#diff[B>:A](that:scala.collection.GenSeq[B]):Repr", "kind" : "def"}, {"label" : "union", "tail" : "(that: GenSeq[B])(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.SeqLike.union", "link" : "menu_commands\/PlayerOrder$.html#union[B>:A,That](that:scala.collection.GenSeq[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "containsSlice", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.containsSlice", "link" : "menu_commands\/PlayerOrder$.html#containsSlice[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B], end: Int): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "menu_commands\/PlayerOrder$.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B],end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.lastIndexOfSlice", "link" : "menu_commands\/PlayerOrder$.html#lastIndexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B], from: Int): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "menu_commands\/PlayerOrder$.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B],from:Int):Int", "kind" : "def"}, {"label" : "indexOfSlice", "tail" : "(that: GenSeq[B]): Int", "member" : "scala.collection.SeqLike.indexOfSlice", "link" : "menu_commands\/PlayerOrder$.html#indexOfSlice[B>:A](that:scala.collection.GenSeq[B]):Int", "kind" : "def"}, {"label" : "endsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.SeqLike.endsWith", "link" : "menu_commands\/PlayerOrder$.html#endsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B], offset: Int): Boolean", "member" : "scala.collection.SeqLike.startsWith", "link" : "menu_commands\/PlayerOrder$.html#startsWith[B](that:scala.collection.GenSeq[B],offset:Int):Boolean", "kind" : "def"}, {"label" : "reverseIterator", "tail" : "(): Iterator[Player]", "member" : "scala.collection.SeqLike.reverseIterator", "link" : "menu_commands\/PlayerOrder$.html#reverseIterator:Iterator[A]", "kind" : "def"}, {"label" : "reverseMap", "tail" : "(f: (Player) ⇒ B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.SeqLike.reverseMap", "link" : "menu_commands\/PlayerOrder$.html#reverseMap[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "reverse", "tail" : "(): Queue[Player]", "member" : "scala.collection.SeqLike.reverse", "link" : "menu_commands\/PlayerOrder$.html#reverse:Repr", "kind" : "def"}, {"label" : "combinations", "tail" : "(n: Int): Iterator[Queue[Player]]", "member" : "scala.collection.SeqLike.combinations", "link" : "menu_commands\/PlayerOrder$.html#combinations(n:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "permutations", "tail" : "(): Iterator[Queue[Player]]", "member" : "scala.collection.SeqLike.permutations", "link" : "menu_commands\/PlayerOrder$.html#permutations:Iterator[Repr]", "kind" : "def"}, {"label" : "size", "tail" : "(): Int", "member" : "scala.collection.SeqLike.size", "link" : "menu_commands\/PlayerOrder$.html#size:Int", "kind" : "def"}, {"label" : "equals", "tail" : "(that: Any): Boolean", "member" : "scala.collection.GenSeqLike.equals", "link" : "menu_commands\/PlayerOrder$.html#equals(that:Any):Boolean", "kind" : "def"}, {"label" : "startsWith", "tail" : "(that: GenSeq[B]): Boolean", "member" : "scala.collection.GenSeqLike.startsWith", "link" : "menu_commands\/PlayerOrder$.html#startsWith[B](that:scala.collection.GenSeq[B]):Boolean", "kind" : "def"}, {"label" : "lastIndexWhere", "tail" : "(p: (Player) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.lastIndexWhere", "link" : "menu_commands\/PlayerOrder$.html#lastIndexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B, end: Int): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "menu_commands\/PlayerOrder$.html#lastIndexOf[B>:A](elem:B,end:Int):Int", "kind" : "def"}, {"label" : "lastIndexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.lastIndexOf", "link" : "menu_commands\/PlayerOrder$.html#lastIndexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B, from: Int): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "menu_commands\/PlayerOrder$.html#indexOf[B>:A](elem:B,from:Int):Int", "kind" : "def"}, {"label" : "indexOf", "tail" : "(elem: B): Int", "member" : "scala.collection.GenSeqLike.indexOf", "link" : "menu_commands\/PlayerOrder$.html#indexOf[B>:A](elem:B):Int", "kind" : "def"}, {"label" : "indexWhere", "tail" : "(p: (Player) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.indexWhere", "link" : "menu_commands\/PlayerOrder$.html#indexWhere(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "prefixLength", "tail" : "(p: (Player) ⇒ Boolean): Int", "member" : "scala.collection.GenSeqLike.prefixLength", "link" : "menu_commands\/PlayerOrder$.html#prefixLength(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "runWith", "tail" : "(action: (Player) ⇒ U): (Int) ⇒ Boolean", "member" : "scala.PartialFunction.runWith", "link" : "menu_commands\/PlayerOrder$.html#runWith[U](action:B=>U):A=>Boolean", "kind" : "def"}, {"label" : "applyOrElse", "tail" : "(x: A1, default: (A1) ⇒ B1): B1", "member" : "scala.PartialFunction.applyOrElse", "link" : "menu_commands\/PlayerOrder$.html#applyOrElse[A1<:A,B1>:B](x:A1,default:A1=>B1):B1", "kind" : "def"}, {"label" : "lift", "tail" : "(): (Int) ⇒ Option[Player]", "member" : "scala.PartialFunction.lift", "link" : "menu_commands\/PlayerOrder$.html#lift:A=>Option[B]", "kind" : "def"}, {"label" : "andThen", "tail" : "(k: (Player) ⇒ C): PartialFunction[Int, C]", "member" : "scala.PartialFunction.andThen", "link" : "menu_commands\/PlayerOrder$.html#andThen[C](k:B=>C):PartialFunction[A,C]", "kind" : "def"}, {"label" : "orElse", "tail" : "(that: PartialFunction[A1, B1]): PartialFunction[A1, B1]", "member" : "scala.PartialFunction.orElse", "link" : "menu_commands\/PlayerOrder$.html#orElse[A1<:A,B1>:B](that:PartialFunction[A1,B1]):PartialFunction[A1,B1]", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ Int): (A) ⇒ Player", "member" : "scala.Function1.compose", "link" : "menu_commands\/PlayerOrder$.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.collection.IterableLike.canEqual", "link" : "menu_commands\/PlayerOrder$.html#canEqual(that:Any):Boolean", "kind" : "def"}, {"label" : "toStream", "tail" : "(): Stream[Player]", "member" : "scala.collection.IterableLike.toStream", "link" : "menu_commands\/PlayerOrder$.html#toStream:scala.collection.immutable.Stream[A]", "kind" : "def"}, {"label" : "zipWithIndex", "tail" : "(bf: CanBuildFrom[Queue[Player], (A1, Int), That]): That", "member" : "scala.collection.IterableLike.zipWithIndex", "link" : "menu_commands\/PlayerOrder$.html#zipWithIndex[A1>:A,That](implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,Int),That]):That", "kind" : "def"}, {"label" : "zipAll", "tail" : "(that: GenIterable[B], thisElem: A1, thatElem: B)(bf: CanBuildFrom[Queue[Player], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zipAll", "link" : "menu_commands\/PlayerOrder$.html#zipAll[B,A1>:A,That](that:scala.collection.GenIterable[B],thisElem:A1,thatElem:B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "zip", "tail" : "(that: GenIterable[B])(bf: CanBuildFrom[Queue[Player], (A1, B), That]): That", "member" : "scala.collection.IterableLike.zip", "link" : "menu_commands\/PlayerOrder$.html#zip[A1>:A,B,That](that:scala.collection.GenIterable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,(A1,B),That]):That", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int, len: Int): Unit", "member" : "scala.collection.IterableLike.copyToArray", "link" : "menu_commands\/PlayerOrder$.html#copyToArray[B>:A](xs:Array[B],start:Int,len:Int):Unit", "kind" : "def"}, {"label" : "takeRight", "tail" : "(n: Int): Queue[Player]", "member" : "scala.collection.IterableLike.takeRight", "link" : "menu_commands\/PlayerOrder$.html#takeRight(n:Int):Repr", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int, step: Int): Iterator[Queue[Player]]", "member" : "scala.collection.IterableLike.sliding", "link" : "menu_commands\/PlayerOrder$.html#sliding(size:Int,step:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "sliding", "tail" : "(size: Int): Iterator[Queue[Player]]", "member" : "scala.collection.IterableLike.sliding", "link" : "menu_commands\/PlayerOrder$.html#sliding(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "grouped", "tail" : "(size: Int): Iterator[Queue[Player]]", "member" : "scala.collection.IterableLike.grouped", "link" : "menu_commands\/PlayerOrder$.html#grouped(size:Int):Iterator[Repr]", "kind" : "def"}, {"label" : "toIterator", "tail" : "(): Iterator[Player]", "member" : "scala.collection.IterableLike.toIterator", "link" : "menu_commands\/PlayerOrder$.html#toIterator:Iterator[A]", "kind" : "def"}, {"label" : "toIterable", "tail" : "(): Iterable[Player]", "member" : "scala.collection.IterableLike.toIterable", "link" : "menu_commands\/PlayerOrder$.html#toIterable:Iterable[A]", "kind" : "def"}, {"label" : "transpose", "tail" : "(asTraversable: (Player) ⇒ GenTraversableOnce[B]): Queue[Queue[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.transpose", "link" : "menu_commands\/PlayerOrder$.html#transpose[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[CC[B]@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "flatten", "tail" : "(asTraversable: (Player) ⇒ GenTraversableOnce[B]): Queue[B]", "member" : "scala.collection.generic.GenericTraversableTemplate.flatten", "link" : "menu_commands\/PlayerOrder$.html#flatten[B](implicitasTraversable:A=>scala.collection.GenTraversableOnce[B]):CC[B]", "kind" : "def"}, {"label" : "unzip3", "tail" : "(asTriple: (Player) ⇒ (A1, A2, A3)): (Queue[A1], Queue[A2], Queue[A3])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip3", "link" : "menu_commands\/PlayerOrder$.html#unzip3[A1,A2,A3](implicitasTriple:A=>(A1,A2,A3)):(CC[A1],CC[A2],CC[A3])", "kind" : "def"}, {"label" : "unzip", "tail" : "(asPair: (Player) ⇒ (A1, A2)): (Queue[A1], Queue[A2])", "member" : "scala.collection.generic.GenericTraversableTemplate.unzip", "link" : "menu_commands\/PlayerOrder$.html#unzip[A1,A2](implicitasPair:A=>(A1,A2)):(CC[A1],CC[A2])", "kind" : "def"}, {"label" : "genericBuilder", "tail" : "(): Builder[B, Queue[B]]", "member" : "scala.collection.generic.GenericTraversableTemplate.genericBuilder", "link" : "menu_commands\/PlayerOrder$.html#genericBuilder[B]:scala.collection.mutable.Builder[B,CC[B]]", "kind" : "def"}, {"label" : "withFilter", "tail" : "(p: (Player) ⇒ Boolean): FilterMonadic[Player, Queue[Player]]", "member" : "scala.collection.TraversableLike.withFilter", "link" : "menu_commands\/PlayerOrder$.html#withFilter(p:A=>Boolean):scala.collection.generic.FilterMonadic[A,Repr]", "kind" : "def"}, {"label" : "stringPrefix", "tail" : "(): String", "member" : "scala.collection.TraversableLike.stringPrefix", "link" : "menu_commands\/PlayerOrder$.html#stringPrefix:String", "kind" : "def"}, {"label" : "to", "tail" : "(cbf: CanBuildFrom[Nothing, Player, Col[Player]]): Col[Player]", "member" : "scala.collection.TraversableLike.to", "link" : "menu_commands\/PlayerOrder$.html#to[Col[_]](implicitcbf:scala.collection.generic.CanBuildFrom[Nothing,A,Col[A@scala.annotation.unchecked.uncheckedVariance]]):Col[A@scala.annotation.unchecked.uncheckedVariance]", "kind" : "def"}, {"label" : "toTraversable", "tail" : "(): Traversable[Player]", "member" : "scala.collection.TraversableLike.toTraversable", "link" : "menu_commands\/PlayerOrder$.html#toTraversable:Traversable[A]", "kind" : "def"}, {"label" : "inits", "tail" : "(): Iterator[Queue[Player]]", "member" : "scala.collection.TraversableLike.inits", "link" : "menu_commands\/PlayerOrder$.html#inits:Iterator[Repr]", "kind" : "def"}, {"label" : "tails", "tail" : "(): Iterator[Queue[Player]]", "member" : "scala.collection.TraversableLike.tails", "link" : "menu_commands\/PlayerOrder$.html#tails:Iterator[Repr]", "kind" : "def"}, {"label" : "splitAt", "tail" : "(n: Int): (Queue[Player], Queue[Player])", "member" : "scala.collection.TraversableLike.splitAt", "link" : "menu_commands\/PlayerOrder$.html#splitAt(n:Int):(Repr,Repr)", "kind" : "def"}, {"label" : "dropWhile", "tail" : "(p: (Player) ⇒ Boolean): Queue[Player]", "member" : "scala.collection.TraversableLike.dropWhile", "link" : "menu_commands\/PlayerOrder$.html#dropWhile(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "init", "tail" : "(): Queue[Player]", "member" : "scala.collection.TraversableLike.init", "link" : "menu_commands\/PlayerOrder$.html#init:Repr", "kind" : "def"}, {"label" : "lastOption", "tail" : "(): Option[Player]", "member" : "scala.collection.TraversableLike.lastOption", "link" : "menu_commands\/PlayerOrder$.html#lastOption:Option[A]", "kind" : "def"}, {"label" : "headOption", "tail" : "(): Option[Player]", "member" : "scala.collection.TraversableLike.headOption", "link" : "menu_commands\/PlayerOrder$.html#headOption:Option[A]", "kind" : "def"}, {"label" : "scanRight", "tail" : "(z: B)(op: (Player, B) ⇒ B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.scanRight", "link" : "menu_commands\/PlayerOrder$.html#scanRight[B,That](z:B)(op:(A,B)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scanLeft", "tail" : "(z: B)(op: (B, Player) ⇒ B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.scanLeft", "link" : "menu_commands\/PlayerOrder$.html#scanLeft[B,That](z:B)(op:(B,A)=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "scan", "tail" : "(z: B)(op: (B, B) ⇒ B)(cbf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.scan", "link" : "menu_commands\/PlayerOrder$.html#scan[B>:A,That](z:B)(op:(B,B)=>B)(implicitcbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "groupBy", "tail" : "(f: (Player) ⇒ K): Map[K, Queue[Player]]", "member" : "scala.collection.TraversableLike.groupBy", "link" : "menu_commands\/PlayerOrder$.html#groupBy[K](f:A=>K):scala.collection.immutable.Map[K,Repr]", "kind" : "def"}, {"label" : "partition", "tail" : "(p: (Player) ⇒ Boolean): (Queue[Player], Queue[Player])", "member" : "scala.collection.TraversableLike.partition", "link" : "menu_commands\/PlayerOrder$.html#partition(p:A=>Boolean):(Repr,Repr)", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Player, B])(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.collect", "link" : "menu_commands\/PlayerOrder$.html#collect[B,That](pf:PartialFunction[A,B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "filterNot", "tail" : "(p: (Player) ⇒ Boolean): Queue[Player]", "member" : "scala.collection.TraversableLike.filterNot", "link" : "menu_commands\/PlayerOrder$.html#filterNot(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "filter", "tail" : "(p: (Player) ⇒ Boolean): Queue[Player]", "member" : "scala.collection.TraversableLike.filter", "link" : "menu_commands\/PlayerOrder$.html#filter(p:A=>Boolean):Repr", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Player) ⇒ GenTraversableOnce[B])(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.flatMap", "link" : "menu_commands\/PlayerOrder$.html#flatMap[B,That](f:A=>scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Player) ⇒ B)(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.map", "link" : "menu_commands\/PlayerOrder$.html#map[B,That](f:A=>B)(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: Traversable[B])(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "menu_commands\/PlayerOrder$.html#++:[B>:A,That](that:Traversable[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++:", "tail" : "(that: TraversableOnce[B])(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.++:", "link" : "menu_commands\/PlayerOrder$.html#++:[B>:A,That](that:scala.collection.TraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "++", "tail" : "(that: GenTraversableOnce[B])(bf: CanBuildFrom[Queue[Player], B, That]): That", "member" : "scala.collection.TraversableLike.++", "link" : "menu_commands\/PlayerOrder$.html#++[B>:A,That](that:scala.collection.GenTraversableOnce[B])(implicitbf:scala.collection.generic.CanBuildFrom[Repr,B,That]):That", "kind" : "def"}, {"label" : "hasDefiniteSize", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.hasDefiniteSize", "link" : "menu_commands\/PlayerOrder$.html#hasDefiniteSize:Boolean", "kind" : "def"}, {"label" : "isTraversableAgain", "tail" : "(): Boolean", "member" : "scala.collection.TraversableLike.isTraversableAgain", "link" : "menu_commands\/PlayerOrder$.html#isTraversableAgain:Boolean", "kind" : "final def"}, {"label" : "repr", "tail" : "(): Queue[Player]", "member" : "scala.collection.TraversableLike.repr", "link" : "menu_commands\/PlayerOrder$.html#repr:Repr", "kind" : "def"}, {"label" : "Self", "tail" : "", "member" : "scala.collection.TraversableLike.Self", "link" : "menu_commands\/PlayerOrder$.html#Self=Repr", "kind" : "type"}, {"label" : "par", "tail" : "(): ParSeq[Player]", "member" : "scala.collection.Parallelizable.par", "link" : "menu_commands\/PlayerOrder$.html#par:ParRepr", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "menu_commands\/PlayerOrder$.html#addString(b:StringBuilder):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, sep: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "menu_commands\/PlayerOrder$.html#addString(b:StringBuilder,sep:String):StringBuilder", "kind" : "def"}, {"label" : "addString", "tail" : "(b: StringBuilder, start: String, sep: String, end: String): StringBuilder", "member" : "scala.collection.TraversableOnce.addString", "link" : "menu_commands\/PlayerOrder$.html#addString(b:StringBuilder,start:String,sep:String,end:String):StringBuilder", "kind" : "def"}, {"label" : "mkString", "tail" : "(): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "menu_commands\/PlayerOrder$.html#mkString:String", "kind" : "def"}, {"label" : "mkString", "tail" : "(sep: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "menu_commands\/PlayerOrder$.html#mkString(sep:String):String", "kind" : "def"}, {"label" : "mkString", "tail" : "(start: String, sep: String, end: String): String", "member" : "scala.collection.TraversableOnce.mkString", "link" : "menu_commands\/PlayerOrder$.html#mkString(start:String,sep:String,end:String):String", "kind" : "def"}, {"label" : "toMap", "tail" : "(ev: <:<[Player, (T, U)]): Map[T, U]", "member" : "scala.collection.TraversableOnce.toMap", "link" : "menu_commands\/PlayerOrder$.html#toMap[T,U](implicitev:A<:<(T,U)):scala.collection.immutable.Map[T,U]", "kind" : "def"}, {"label" : "toVector", "tail" : "(): Vector[Player]", "member" : "scala.collection.TraversableOnce.toVector", "link" : "menu_commands\/PlayerOrder$.html#toVector:Vector[A]", "kind" : "def"}, {"label" : "toSet", "tail" : "(): Set[B]", "member" : "scala.collection.TraversableOnce.toSet", "link" : "menu_commands\/PlayerOrder$.html#toSet[B>:A]:scala.collection.immutable.Set[B]", "kind" : "def"}, {"label" : "toBuffer", "tail" : "(): Buffer[B]", "member" : "scala.collection.TraversableOnce.toBuffer", "link" : "menu_commands\/PlayerOrder$.html#toBuffer[B>:A]:scala.collection.mutable.Buffer[B]", "kind" : "def"}, {"label" : "toIndexedSeq", "tail" : "(): IndexedSeq[Player]", "member" : "scala.collection.TraversableOnce.toIndexedSeq", "link" : "menu_commands\/PlayerOrder$.html#toIndexedSeq:scala.collection.immutable.IndexedSeq[A]", "kind" : "def"}, {"label" : "toArray", "tail" : "(arg0: ClassTag[B]): Array[B]", "member" : "scala.collection.TraversableOnce.toArray", "link" : "menu_commands\/PlayerOrder$.html#toArray[B>:A](implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "menu_commands\/PlayerOrder$.html#copyToArray[B>:A](xs:Array[B]):Unit", "kind" : "def"}, {"label" : "copyToArray", "tail" : "(xs: Array[B], start: Int): Unit", "member" : "scala.collection.TraversableOnce.copyToArray", "link" : "menu_commands\/PlayerOrder$.html#copyToArray[B>:A](xs:Array[B],start:Int):Unit", "kind" : "def"}, {"label" : "copyToBuffer", "tail" : "(dest: Buffer[B]): Unit", "member" : "scala.collection.TraversableOnce.copyToBuffer", "link" : "menu_commands\/PlayerOrder$.html#copyToBuffer[B>:A](dest:scala.collection.mutable.Buffer[B]):Unit", "kind" : "def"}, {"label" : "minBy", "tail" : "(f: (Player) ⇒ B)(cmp: Ordering[B]): Player", "member" : "scala.collection.TraversableOnce.minBy", "link" : "menu_commands\/PlayerOrder$.html#minBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "maxBy", "tail" : "(f: (Player) ⇒ B)(cmp: Ordering[B]): Player", "member" : "scala.collection.TraversableOnce.maxBy", "link" : "menu_commands\/PlayerOrder$.html#maxBy[B](f:A=>B)(implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "max", "tail" : "(cmp: Ordering[B]): Player", "member" : "scala.collection.TraversableOnce.max", "link" : "menu_commands\/PlayerOrder$.html#max[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "min", "tail" : "(cmp: Ordering[B]): Player", "member" : "scala.collection.TraversableOnce.min", "link" : "menu_commands\/PlayerOrder$.html#min[B>:A](implicitcmp:Ordering[B]):A", "kind" : "def"}, {"label" : "product", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.product", "link" : "menu_commands\/PlayerOrder$.html#product[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "sum", "tail" : "(num: Numeric[B]): B", "member" : "scala.collection.TraversableOnce.sum", "link" : "menu_commands\/PlayerOrder$.html#sum[B>:A](implicitnum:Numeric[B]):B", "kind" : "def"}, {"label" : "aggregate", "tail" : "(z: ⇒ B)(seqop: (B, Player) ⇒ B, combop: (B, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.aggregate", "link" : "menu_commands\/PlayerOrder$.html#aggregate[B](z:=>B)(seqop:(B,A)=>B,combop:(B,B)=>B):B", "kind" : "def"}, {"label" : "fold", "tail" : "(z: A1)(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.fold", "link" : "menu_commands\/PlayerOrder$.html#fold[A1>:A](z:A1)(op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceOption", "tail" : "(op: (A1, A1) ⇒ A1): Option[A1]", "member" : "scala.collection.TraversableOnce.reduceOption", "link" : "menu_commands\/PlayerOrder$.html#reduceOption[A1>:A](op:(A1,A1)=>A1):Option[A1]", "kind" : "def"}, {"label" : "reduce", "tail" : "(op: (A1, A1) ⇒ A1): A1", "member" : "scala.collection.TraversableOnce.reduce", "link" : "menu_commands\/PlayerOrder$.html#reduce[A1>:A](op:(A1,A1)=>A1):A1", "kind" : "def"}, {"label" : "reduceRightOption", "tail" : "(op: (Player, B) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceRightOption", "link" : "menu_commands\/PlayerOrder$.html#reduceRightOption[B>:A](op:(A,B)=>B):Option[B]", "kind" : "def"}, {"label" : "reduceLeftOption", "tail" : "(op: (B, Player) ⇒ B): Option[B]", "member" : "scala.collection.TraversableOnce.reduceLeftOption", "link" : "menu_commands\/PlayerOrder$.html#reduceLeftOption[B>:A](op:(B,A)=>B):Option[B]", "kind" : "def"}, {"label" : ":\\", "tail" : "(z: B)(op: (Player, B) ⇒ B): B", "member" : "scala.collection.TraversableOnce.:\\", "link" : "menu_commands\/PlayerOrder$.html#:\\[B](z:B)(op:(A,B)=>B):B", "kind" : "def"}, {"label" : "\/:", "tail" : "(z: B)(op: (B, Player) ⇒ B): B", "member" : "scala.collection.TraversableOnce.\/:", "link" : "menu_commands\/PlayerOrder$.html#\/:[B](z:B)(op:(B,A)=>B):B", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Player, B]): Option[B]", "member" : "scala.collection.TraversableOnce.collectFirst", "link" : "menu_commands\/PlayerOrder$.html#collectFirst[B](pf:PartialFunction[A,B]):Option[B]", "kind" : "def"}, {"label" : "count", "tail" : "(p: (Player) ⇒ Boolean): Int", "member" : "scala.collection.TraversableOnce.count", "link" : "menu_commands\/PlayerOrder$.html#count(p:A=>Boolean):Int", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "scala.collection.TraversableOnce.nonEmpty", "link" : "menu_commands\/PlayerOrder$.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "reversed", "tail" : "(): List[Player]", "member" : "scala.collection.TraversableOnce.reversed", "link" : "menu_commands\/PlayerOrder$.html#reversed:List[A]", "kind" : "def"}, {"label" : "sizeHintIfCheap", "tail" : "(): Int", "member" : "scala.collection.GenTraversableOnce.sizeHintIfCheap", "link" : "menu_commands\/PlayerOrder$.html#sizeHintIfCheap:Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/PlayerOrder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/PlayerOrder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/PlayerOrder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/PlayerOrder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/PlayerOrder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/PlayerOrder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/PlayerOrder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/PlayerOrder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/PlayerOrder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/PlayerOrder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/PlayerOrder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/PlayerOrder$.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/PlayerOrder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/PlayerOrder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/PlayerOrder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "menu_commands.Strategy", "shortDescription" : "An Agent blueprint for creating AI agents, cannot be used as-is", "members_class" : [{"label" : "show", "tail" : "(): String", "member" : "menu_commands.Strategy.show", "link" : "menu_commands\/Strategy.html#show:String", "kind" : "def"}, {"label" : "doMove", "tail" : "(): Unit", "member" : "menu_commands.Strategy.doMove", "link" : "menu_commands\/Strategy.html#doMove:Unit", "kind" : "def"}, {"member" : "menu_commands.Strategy#<init>", "error" : "unsupported entity"}, {"label" : "player", "tail" : ": Player", "member" : "menu_commands.Strategy.player", "link" : "menu_commands\/Strategy.html#player:menu_commands.Player", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/Strategy.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/Strategy.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/Strategy.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/Strategy.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/Strategy.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/Strategy.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/Strategy.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Strategy.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Strategy.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/Strategy.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/Strategy.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/Strategy.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/Strategy.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/Strategy.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/Strategy.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/Strategy.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/Strategy.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/Strategy.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/Strategy.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/Strategy.html", "kind" : "class"}, {"name" : "menu_commands.View", "shortDescription" : "A view that holds all of the structure\/layout for the GUI", "members_class" : [{"label" : "PlayerHandPanel", "tail" : "", "member" : "menu_commands.View.PlayerHandPanel", "link" : "menu_commands\/View.html#PlayerHandPanelextendsPanel", "kind" : "class"}, {"label" : "getFile", "tail" : "(cardName: String, cardMoney: Int): String", "member" : "menu_commands.View.getFile", "link" : "menu_commands\/View.html#getFile(cardName:String,cardMoney:Int):String", "kind" : "def"}, {"label" : "HiddenCardPanel", "tail" : "", "member" : "menu_commands.View.HiddenCardPanel", "link" : "menu_commands\/View.html#HiddenCardPanelextendsPanel", "kind" : "class"}, {"label" : "CardPanel", "tail" : "", "member" : "menu_commands.View.CardPanel", "link" : "menu_commands\/View.html#CardPanelextendsPanel", "kind" : "class"}, {"label" : "WinnerPanel", "tail" : "", "member" : "menu_commands.View.WinnerPanel", "link" : "menu_commands\/View.html#WinnerPanelextendsPanel", "kind" : "class"}, {"label" : "update", "tail" : "(): Unit", "member" : "menu_commands.View.update", "link" : "menu_commands\/View.html#update:Unit", "kind" : "def"}, {"label" : "frame", "tail" : ": MainFrame", "member" : "menu_commands.View.frame", "link" : "menu_commands\/View.html#frame:scala.swing.MainFrame", "kind" : "val"}, {"label" : "gameArea", "tail" : ": BorderPanel", "member" : "menu_commands.View.gameArea", "link" : "menu_commands\/View.html#gameArea:scala.swing.BorderPanel", "kind" : "val"}, {"label" : "south", "tail" : ": BoxPanel", "member" : "menu_commands.View.south", "link" : "menu_commands\/View.html#south:scala.swing.BoxPanel", "kind" : "val"}, {"label" : "playerHands", "tail" : ": ArrayBuffer[PlayerHandPanel]", "member" : "menu_commands.View.playerHands", "link" : "menu_commands\/View.html#playerHands:scala.collection.mutable.ArrayBuffer[View.this.PlayerHandPanel]", "kind" : "val"}, {"label" : "cardSpaces", "tail" : ": BorderPanel", "member" : "menu_commands.View.cardSpaces", "link" : "menu_commands\/View.html#cardSpaces:scala.swing.BorderPanel", "kind" : "val"}, {"label" : "deckSpaces", "tail" : ": BoxPanel", "member" : "menu_commands.View.deckSpaces", "link" : "menu_commands\/View.html#deckSpaces:scala.swing.BoxPanel", "kind" : "val"}, {"label" : "winnerDeck", "tail" : ": WinnerPanel", "member" : "menu_commands.View.winnerDeck", "link" : "menu_commands\/View.html#winnerDeck:View.this.WinnerPanel", "kind" : "val"}, {"label" : "hiddenDeck", "tail" : ": HiddenCardPanel", "member" : "menu_commands.View.hiddenDeck", "link" : "menu_commands\/View.html#hiddenDeck:View.this.HiddenCardPanel", "kind" : "val"}, {"label" : "flippedCard", "tail" : ": CardPanel", "member" : "menu_commands.View.flippedCard", "link" : "menu_commands\/View.html#flippedCard:View.this.CardPanel", "kind" : "var"}, {"label" : "buttons", "tail" : ": BoxPanel", "member" : "menu_commands.View.buttons", "link" : "menu_commands\/View.html#buttons:scala.swing.BoxPanel", "kind" : "val"}, {"label" : "init", "tail" : "(ctr: Controller, mod: Model): Unit", "member" : "menu_commands.View.init", "link" : "menu_commands\/View.html#init(ctr:menu_commands.Controller,mod:menu_commands.Model):Unit", "kind" : "def"}, {"label" : "bgErik", "tail" : ": ButtonGroup", "member" : "menu_commands.View.bgErik", "link" : "menu_commands\/View.html#bgErik:scala.swing.ButtonGroup", "kind" : "var"}, {"label" : "bgGrace", "tail" : ": ButtonGroup", "member" : "menu_commands.View.bgGrace", "link" : "menu_commands\/View.html#bgGrace:scala.swing.ButtonGroup", "kind" : "var"}, {"label" : "bgRocco", "tail" : ": ButtonGroup", "member" : "menu_commands.View.bgRocco", "link" : "menu_commands\/View.html#bgRocco:scala.swing.ButtonGroup", "kind" : "var"}, {"label" : "bgEmma", "tail" : ": ButtonGroup", "member" : "menu_commands.View.bgEmma", "link" : "menu_commands\/View.html#bgEmma:scala.swing.ButtonGroup", "kind" : "var"}, {"label" : "model", "tail" : ": Option[Model]", "member" : "menu_commands.View.model", "link" : "menu_commands\/View.html#model:Option[menu_commands.Model]", "kind" : "var"}, {"label" : "controller", "tail" : ": Option[Controller]", "member" : "menu_commands.View.controller", "link" : "menu_commands\/View.html#controller:Option[menu_commands.Controller]", "kind" : "var"}, {"member" : "menu_commands.View#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "menu_commands\/View.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "menu_commands\/View.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "menu_commands\/View.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "menu_commands\/View.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "menu_commands\/View.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "menu_commands\/View.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "menu_commands\/View.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/View.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/View.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "menu_commands\/View.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "menu_commands\/View.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "menu_commands\/View.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "menu_commands\/View.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "menu_commands\/View.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "menu_commands\/View.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "menu_commands\/View.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "menu_commands\/View.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "menu_commands\/View.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "menu_commands\/View.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "menu_commands\/View.html", "kind" : "class"}]};